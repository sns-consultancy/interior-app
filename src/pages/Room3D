import React, { useEffect, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import * as THREE from "three";
export default function Room3D() {
  const navigate = useNavigate();
  const canvasRef = useRef();
  const [language, setLanguage] = useState("en");
  const [labels, setLabels] = useState({});
  const allLabels = {
    en: {
      roomTitle: "3D Room Designer",
      roomTypeLabel: "Choose Room Type:",
      kitchenShapeLabel: "Kitchen Shape:",
      showRoomBtn: "Show Room",
      vastuLink: "Get Vastu Suggestions",
      backHomeLink: "Back to Home"
    },
    // ... (other languages omitted for brevity, same as your HTML)
  };
  useEffect(() => {
    setLabels(allLabels[language] || allLabels["en"]);
  }, [language]);
  const [roomType, setRoomType] = useState("bedroom");
  const [kitchenShape, setKitchenShape] = useState("small");
  // 3D Initialization
  useEffect(() => {
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, 800 / 500, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current, antialias: true });
    renderer.setSize(800, 500);
    const light = new THREE.AmbientLight(0xffffff, 1.2);
    scene.add(light);
    camera.position.set(0, 2, 8);
    camera.lookAt(0, 0, 0);
    let roomMesh;
    const getKitchenDimensions = (shape) => {
      switch (shape) {
        case "small": return [3, 2.5, 3];
        case "medium": return [3.6, 2.5, 4.5];
        case "large": return [4.5, 2.5, 6];
        case "galley": return [2.4, 2.5, 4.5];
        case "u-shaped": return [3.6, 2.5, 4.8];
        case "l-shaped": return [3.6, 2.5, 4.5];
        default: return [3, 2.5, 3];
      }
    };
    const drawRoom = () => {
      if (roomMesh) scene.remove(roomMesh);
      let color = 0xcccccc, width = 4, height = 2.5, depth = 4;
      if (roomType === "bedroom") color = 0xadd8e6;
      else if (roomType === "kitchen") {
        color = 0xffe4b5;
        [width, height, depth] = getKitchenDimensions(kitchenShape);
      } else if (roomType === "puja") {
        color = 0xfff8dc;
        width = 2.5; height = 2.5; depth = 2.5;
      }
      const geometry = new THREE.BoxGeometry(width, height, depth);
      const material = new THREE.MeshLambertMaterial({ color, side: THREE.BackSide });
      roomMesh = new THREE.Mesh(geometry, material);
      scene.add(roomMesh);
    };
    const animate = () => {
      requestAnimationFrame(animate);
      if (roomMesh) roomMesh.rotation.y += 0.003;
      renderer.render(scene, camera);
    };
    drawRoom();
    animate();
    return () => renderer.dispose();
  }, [roomType, kitchenShape]);
  return (
    <div className="hero">
      <h1>{labels.roomTitle}</h1>
      <div className="language-select">
        <label>Language:</label>
        <select value={language} onChange={(e) => setLanguage(e.target.value)}>
          <option value="en">English</option>
          {/* other options */}
        </select>
      </div>
      <div className="controls" style={{ margin: "1rem 0" }}>
        <label>{labels.roomTypeLabel}</label>
        <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>
          <option value="bedroom">Bedroom</option>
          <option value="kitchen">Kitchen</option>
          <option value="puja">Puja Room</option>
        </select>
        {roomType === "kitchen" && (
          <>
            <label>{labels.kitchenShapeLabel}</label>
            <select value={kitchenShape} onChange={(e) => setKitchenShape(e.target.value)}>
              <option value="small">Small</option>
              <option value="medium">Medium</option>
              <option value="large">Large</option>
              <option value="galley">Galley</option>
              <option value="u-shaped">U-Shaped</option>
              <option value="l-shaped">L-Shaped</option>
            </select>
          </>
        )}
        <button onClick={() => {}}>Show Room</button>
      </div>
      <canvas ref={canvasRef} style={{ width: "100%", height: "500px", background: "#eee" }} />
      <div style={{ marginTop: "1rem" }}>
        <button onClick={() => navigate("/vastu")}>{labels.vastuLink}</button>
        <button onClick={() => navigate("/")}>{labels.backHomeLink}</button>
      </div>
    </div>
  );
}